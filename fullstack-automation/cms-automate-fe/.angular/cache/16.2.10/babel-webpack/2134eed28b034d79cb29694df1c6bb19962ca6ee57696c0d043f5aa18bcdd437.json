{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class MultilineComponent {\n  constructor() {\n    this.entityName = \"\";\n    this.passedTextList = [\"none\"];\n    this.textLines = [\"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n    this.multiTextDone = new EventEmitter();\n    this.textLines1 = \"\";\n    this.textLines2 = \"\";\n  }\n  ngOnInit() {\n    if (this.passedTextList !== null && this.passedTextList[0] !== \"none\") {\n      this.textLines = JSON.parse(JSON.stringify(this.passedTextList));\n    }\n  }\n  addLine() {\n    this.textLines.push(\"\");\n  }\n  completed() {\n    this.textLines.forEach((text, index) => {\n      console.log(index);\n      /* eslint-disable */\n      let m = document.getElementById(`content-${index}`);\n      let mo = document.getElementById('huu');\n      console.log(`${m?.getAttribute(\"value\")} ${m?.innerText}`);\n      console.log(`${JSON.stringify(mo?.attributes)} ${this.textLines1}`);\n    });\n    this.multiTextDone.emit(this.textLines);\n  }\n  getId(lineIndex) {\n    return `content-${lineIndex}`;\n  }\n  static #_ = this.ɵfac = function MultilineComponent_Factory(t) {\n    return new (t || MultilineComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MultilineComponent,\n    selectors: [[\"app-multiline\"]],\n    inputs: {\n      entityName: \"entityName\",\n      passedTextList: \"passedTextList\"\n    },\n    outputs: {\n      multiTextDone: \"multiTextDone\"\n    },\n    decls: 10,\n    vars: 7,\n    consts: [[2, \"overflow-y\", \"auto\"], [\"id\", \"text1\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"text2\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"text3\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"text4\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"text5\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"text6\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"text7\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function MultilineComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function MultilineComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.textLines[0] = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function MultilineComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.textLines[1] = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function MultilineComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.textLines[2] = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function MultilineComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.textLines[3] = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function MultilineComponent_Template_input_ngModelChange_5_listener($event) {\n          return ctx.textLines[4] = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function MultilineComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.textLines[5] = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function MultilineComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.textLines[6] = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function MultilineComponent_Template_button_click_8_listener() {\n          return ctx.completed();\n        });\n        i0.ɵɵtext(9, \"Done\");\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.textLines[0]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.textLines[1]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.textLines[2]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.textLines[3]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.textLines[4]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.textLines[5]);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.textLines[6]);\n      }\n    },\n    dependencies: [i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n    styles: [\"form[_ngcontent-%COMP%] {\\n    margin: 5px 15px;\\n    border: 2px inset darkcyan;\\n    background-color: aliceblue;\\n    padding:  14px;\\n    max-width: 1800px;\\n    font-size: larger;\\n}\\n\\ndiv[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n    margin: 10px 30px;\\n    border: 2px solid blue;\\n    padding:  14px;\\n    max-width: 700px;\\n}\\ninput[_ngcontent-%COMP%], select[_ngcontent-%COMP%], label[_ngcontent-%COMP%] {\\n    min-width: 300px;\\n    font-size: larger;\\n    height:30px;\\n    margin-bottom: 7px;\\n   \\n}\\n.long-type[_ngcontent-%COMP%] {\\n    min-width: 1500px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9vcHRpbWl6YXRpb25zL211bHRpbGluZS9tdWx0aWxpbmUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQiwwQkFBMEI7SUFDMUIsMkJBQTJCO0lBQzNCLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLHNCQUFzQjtJQUN0QixjQUFjO0lBQ2QsZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsaUJBQWlCO0lBQ2pCLFdBQVc7SUFDWCxrQkFBa0I7O0FBRXRCO0FBQ0E7SUFDSSxpQkFBaUI7QUFDckIiLCJzb3VyY2VzQ29udGVudCI6WyJmb3JtIHtcbiAgICBtYXJnaW46IDVweCAxNXB4O1xuICAgIGJvcmRlcjogMnB4IGluc2V0IGRhcmtjeWFuO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGFsaWNlYmx1ZTtcbiAgICBwYWRkaW5nOiAgMTRweDtcbiAgICBtYXgtd2lkdGg6IDE4MDBweDtcbiAgICBmb250LXNpemU6IGxhcmdlcjtcbn1cblxuZGl2IGZvcm0ge1xuICAgIG1hcmdpbjogMTBweCAzMHB4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsdWU7XG4gICAgcGFkZGluZzogIDE0cHg7XG4gICAgbWF4LXdpZHRoOiA3MDBweDtcbn1cbmlucHV0LCBzZWxlY3QsIGxhYmVsIHtcbiAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgIGZvbnQtc2l6ZTogbGFyZ2VyO1xuICAgIGhlaWdodDozMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDdweDtcbiAgIFxufVxuLmxvbmctdHlwZSB7XG4gICAgbWluLXdpZHRoOiAxNTAwcHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["EventEmitter","MultilineComponent","constructor","entityName","passedTextList","textLines","multiTextDone","textLines1","textLines2","ngOnInit","JSON","parse","stringify","addLine","push","completed","forEach","text","index","console","log","m","document","getElementById","mo","getAttribute","innerText","attributes","emit","getId","lineIndex","_","_2","selectors","inputs","outputs","decls","vars","consts","template","MultilineComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","MultilineComponent_Template_input_ngModelChange_1_listener","$event","ɵɵelementEnd","MultilineComponent_Template_input_ngModelChange_2_listener","MultilineComponent_Template_input_ngModelChange_3_listener","MultilineComponent_Template_input_ngModelChange_4_listener","MultilineComponent_Template_input_ngModelChange_5_listener","MultilineComponent_Template_input_ngModelChange_6_listener","MultilineComponent_Template_input_ngModelChange_7_listener","MultilineComponent_Template_button_click_8_listener","ɵɵtext","ɵɵadvance","ɵɵproperty"],"sources":["/Users/shantanu/Documents/GitHub/ssg1227-GuruDatta@9/fullstack-automation/cms-automate-fe/src/app/components/optimizations/multiline/multiline.component.ts","/Users/shantanu/Documents/GitHub/ssg1227-GuruDatta@9/fullstack-automation/cms-automate-fe/src/app/components/optimizations/multiline/multiline.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-multiline',\n  templateUrl: './multiline.component.html',\n  styleUrls: ['./multiline.component.css']\n})\nexport class MultilineComponent implements OnInit {\n  @Input() entityName = \"\" ;\n  @Input() passedTextList = [\"none\"];\n  textLines = [\"\",\"\",\"\",\"\",\"\",\"\",\"\"] ;\n  @Output() multiTextDone = new EventEmitter<string[]>();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n    if (this.passedTextList !== null && this.passedTextList[0] !== \"none\") {\n      this.textLines = JSON.parse(JSON.stringify(this.passedTextList));\n    }\n  }\n  addLine() {\n    this.textLines.push(\"\") ;\n  }\n  textLines1 = \"\";\n  textLines2 = \"\";\n\n  completed()\n  {\n    this.textLines.forEach((text:string,index) => {\n      console.log(index) ;\n      /* eslint-disable */\n      let m = document.getElementById(`content-${index}`);\n      let mo = document.getElementById('huu');\n      console.log(`${m?.getAttribute(\"value\")} ${m?.innerText}`);\n      console.log(`${JSON.stringify(mo?.attributes)} ${this.textLines1}`);\n    })\n    this.multiTextDone.emit(this.textLines);\n  }\n  getId(lineIndex:any) {\n    return `content-${lineIndex}`\n  }\n}\n","<div style=\"overflow-y: auto;\">\n    <!-- \n<input type=\"text\" readonly [ngModel]=\"entityName\">\n    -->\n<input [(ngModel)]=\"textLines[0]\" id=\"text1\">\n<input [(ngModel)]=\"textLines[1]\" id=\"text2\">\n<input [(ngModel)]=\"textLines[2]\" id=\"text3\">\n<input [(ngModel)]=\"textLines[3]\" id=\"text4\">\n<input [(ngModel)]=\"textLines[4]\" id=\"text5\">\n<input [(ngModel)]=\"textLines[5]\" id=\"text6\">\n<input [(ngModel)]=\"textLines[6]\" id=\"text7\">\n\n<!-- dynamic doesnt seem to work with ngModel, so hard code as above..\n    will debug <div  *ngFor=\"let textLine of textLines; let i = index\">\n<input \n            type=\"text\" \n            [id]=\"getId(i)\"> <br/>\n</div>\n<button (click)=\"addLine()\">Add</button>\n-->\n<button (click)=\"completed()\">Done</button>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}