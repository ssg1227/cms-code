{"ast":null,"code":"import { FormGroup, FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nexport class ReactiveTestComponent {\n  constructor() {\n    this.subject = new FormControl('Personal Details');\n    this.personalDetails = new FormGroup({\n      firstName: new FormControl(''),\n      lastName: new FormControl('')\n    });\n    this.interval = new FormControl(0);\n    // replace by observable\n    this.timerA = -1;\n    this.intervalObserver = new Observable(observer => {});\n  }\n  ngOnInit() {}\n  startTimer() {}\n  startUpdate() {\n    this.subject.setValue(`${new Date().toLocaleDateString()} ${Math.random() * 100} `);\n    return;\n  }\n  stopUpdate() {\n    window.clearInterval(this.timerA);\n  }\n  get PersonalDetails() {\n    return JSON.stringify(this.personalDetails.value);\n  }\n  onSubmit() {\n    this.subject.setValue('aa'); // ( `${new Date().toLocaleDateString()} ${Math.random() * 100} `   );\n  }\n  static #_ = this.ɵfac = function ReactiveTestComponent_Factory(t) {\n    return new (t || ReactiveTestComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReactiveTestComponent,\n    selectors: [[\"app-reactive-test\"]],\n    decls: 18,\n    vars: 4,\n    consts: [[\"for\", \"subject\"], [\"type\", \"text\", \"id\", \"subject\", 3, \"formControl\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"formControlName\", \"firstName\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"formControlName\", \"lastName\"], [\"type\", \"text\", \"id\", \"interval\", 3, \"formControl\"], [\"id\", \"stop\", 3, \"click\"], [\"type\", \"submit\"]],\n    template: function ReactiveTestComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"label\", 0);\n        i0.ɵɵtext(1, \"Subject:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"input\", 1);\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function ReactiveTestComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(4, \"label\", 3);\n        i0.ɵɵtext(5, \"First Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 4);\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Last Name:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementStart(11, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function ReactiveTestComponent_Template_button_click_11_listener() {\n          return ctx.startUpdate();\n        });\n        i0.ɵɵtext(12, \"Start\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"button\", 9);\n        i0.ɵɵtext(17, \"Submit\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.subject);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.personalDetails);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formControl\", ctx.interval);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.PersonalDetails);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormControlDirective, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"div[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] {\\n    margin: 10px 30px;\\n    border: 2p solid blue;\\n    padding:  14px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9yZWFjdGl2ZS10ZXN0L3JlYWN0aXZlLXRlc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGlCQUFpQjtJQUNqQixxQkFBcUI7SUFDckIsY0FBYztBQUNsQiIsInNvdXJjZXNDb250ZW50IjpbImRpdiBmb3JtIHtcbiAgICBtYXJnaW46IDEwcHggMzBweDtcbiAgICBib3JkZXI6IDJwIHNvbGlkIGJsdWU7XG4gICAgcGFkZGluZzogIDE0cHg7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormGroup","FormControl","Observable","ReactiveTestComponent","constructor","subject","personalDetails","firstName","lastName","interval","timerA","intervalObserver","observer","ngOnInit","startTimer","startUpdate","setValue","Date","toLocaleDateString","Math","random","stopUpdate","window","clearInterval","PersonalDetails","JSON","stringify","value","onSubmit","_","_2","selectors","decls","vars","consts","template","ReactiveTestComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","ReactiveTestComponent_Template_form_ngSubmit_3_listener","ReactiveTestComponent_Template_button_click_11_listener","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate"],"sources":["/Users/shantanu/Documents/GitHub/ssg1227-GuruDatta@9/fullstack-automation/cms-automate-fe/src/app/components/reactive-test/reactive-test.component.ts","/Users/shantanu/Documents/GitHub/ssg1227-GuruDatta@9/fullstack-automation/cms-automate-fe/src/app/components/reactive-test/reactive-test.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'app-reactive-test',\n  templateUrl: './reactive-test.component.html',\n  styleUrls: ['./reactive-test.component.css']\n})\nexport class ReactiveTestComponent implements OnInit {\n  subject = new FormControl('Personal Details');\n  personalDetails = new FormGroup(\n    { firstName: new FormControl(''),\n      lastName: new FormControl(''),\n\n  }\n  )\n  interval = new FormControl(0);\n  // replace by observable\n  timerA = -1 ;\n  constructor() {  }\n\n  ngOnInit(): void {\n  }\n  startTimer() {\n\n  }\n   intervalObserver = new Observable((observer) => {\n\n  })\n  startUpdate() {\n   this.subject.setValue(`${new Date().toLocaleDateString()} ${Math.random() * 100} `) ;\n   return ;\n  }\n  stopUpdate() {\n    window.clearInterval(this.timerA);\n  }\n  get PersonalDetails():string {\n    return JSON.stringify(this.personalDetails.value);\n  }\n  onSubmit() {\n    this.subject.setValue('aa') ; // ( `${new Date().toLocaleDateString()} ${Math.random() * 100} `   );\n  }\n}\n/*\n// Create an Observable that will start listening to geolocation updates\n// when a consumer subscribes.\nconst locations = new Observable((observer) => {\n  let watchId: number;\n\n  // Simple geolocation API check provides values to publish\n  if ('geolocation' in navigator) {\n    watchId = navigator.geolocation.watchPosition((position: GeolocationPosition) => {\n      observer.next(position);\n    }, (error: GeolocationPositionError) => {\n      observer.error(error);\n    });\n  } else {\n    observer.error('Geolocation not available');\n  }\n\n  // When the consumer unsubscribes, clean up data ready for next subscription.\n  return {\n    unsubscribe() {\n      navigator.geolocation.clearWatch(watchId);\n    }\n  };\n});\n\n// Call subscribe() to start listening for updates.\nconst locationsSubscription = locations.subscribe({\n  next(position) {\n    console.log('Current Position: ', position);\n  },\n  error(msg) {\n    console.log('Error Getting Location: ', msg);\n  }\n});\n\n// Stop listening for location after 10 seconds\nsetTimeout(() => {\n  locationsSubscription.unsubscribe();\n}, 10000);\n*/","\n    <label for=\"subject\">Subject:</label> <input type=\"text\" id=\"subject\" [formControl]=\"subject\">\n    <form [formGroup]=\"personalDetails\" (ngSubmit)=\"onSubmit()\">\n        <label for=\"firstName\">First Name:</label><input type=\"text\" id=\"firstName\" formControlName=\"firstName\">\n        <label for=\"lastName\">Last Name:</label><input type=\"text\" id=\"lastName\" formControlName=\"lastName\">\n    </form>\n    <input type=\"text\" id=\"interval\" [formControl]=\"interval\"><button id=\"stop\" (click)=\"startUpdate()\">Start</button>\n    <br/>{{PersonalDetails}}<br/>\n    <button type=\"submit\" >Submit</button>\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}